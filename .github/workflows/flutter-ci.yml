# name: Flutter CI/CD

# on:
#   push:
#     branches:
#       - ganna
#   pull_request:
#     branches:
#       - ganna

# jobs:
#   build:
#     name: Build and Test Flutter App
#     runs-on: ubuntu-latest

#     steps:
#     # Step 1: Checkout the code
#     - name: Checkout code
#       uses: actions/checkout@v3

#     # Step 2: Set up Flutter
#     - name: Set up Flutter
#       uses: subosito/flutter-action@v2
#       with:
#         flutter-version: 'stable'

#     # Step 3: Install dependencies
#     - name: Install dependencies
#       run: flutter pub get

#     # Step 4: Run tests
#     - name: Run tests
#       run: flutter test

#     # Step 5: Build the app (optional, for deployment)
#     - name: Build APK
#       run: flutter build apk --release

#     # # Step 6: Archive build artifacts (optional)
#     # - name: Upload APK
#     #   uses: actions/upload-artifact@v2
#     #   with:
#     #     name: app-release.apk
#     #     path: build/app/outputs/flutter-apk/app-release.apk

#     # # Debugging: List files in the APK directory
#     # - name: List APK directory
#     #   run: ls -R build/app/outputs/flutter-apk/
name: Flutter CI/CD

on:
  push:
    branches:
      - ganna
  pull_request:
    branches:
      - ganna

jobs:
  build:
    name: Build and Test Flutter App
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Flutter
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 'stable'
          channel: 'stable'  # Added explicit channel

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          flutter pub get
          flutter pub upgrade  # Ensures latest compatible versions

      # Step 4: Run tests with coverage
      - name: Run tests
        run: |
          flutter test --coverage
          genhtml coverage/lcov.info -o coverage/  # Generate HTML report

      # Step 5: Upload test coverage report
      - name: Upload coverage report
        uses: actions/upload-artifact@v3  # Updated to v3
        with:
          name: coverage-report
          path: coverage/

      # Step 6: Build the app
      - name: Build APK
        run: |
          flutter build apk --release --split-per-abi  # Optimized build
          ls -la build/app/outputs/flutter-apk/  # Verify APK exists

      # Step 7: Upload APK artifact
      - name: Upload APK
        uses: actions/upload-artifact@v3  # Updated to v3
        with:
          name: app-release
          path: build/app/outputs/flutter-apk/*.apk